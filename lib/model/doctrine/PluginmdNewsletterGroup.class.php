<?php

/**
 * PluginmdNewsletterGroup
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginmdNewsletterGroup extends BasemdNewsletterGroup
{
	public function hasSubscriber($subscriber){
		$relations = mdNewsletterGroupSubscriberTable::getInstance()->findByKeys(array(
			'md_subscriber_id' => $subscriber->getId(),
			'md_group_id' => $this->getId()
			));
		return count($relations) > 0;
	}


	public function getSubscribers(){
		$subs = parent::getMdNewsletterGroupSubscriber();
		$return = array();
		foreach($subs as $sub){
			if($sub->getSubscribers()->getStatus() == 'subscribed')
				$return[] = $sub->getSubscribers();
		}
		return $return;
	}
	public function getSubscribersSchedule($queue_id, $limit){
		$q = Doctrine::getTable('mdNewsletterSubscriber')->findSubscribersNotQueue($queue_id, $limit, true);

		$q->leftJoin($q->getRootAlias() .'.mdNewsletterGroupSubscriber gs')
			->andWhere('gs.md_group_id = ' . $this->getId());

		return $q->execute(array(), Doctrine_Core::HYDRATE_ARRAY);
	}

	public function removeSubscriber($subscriber){
		$relation = mdNewsletterGroupSubscriberTable::getInstance()->findByKeys(array(
		  'md_subscriber_id' => $subscriber->getId(),
		  'md_group_id' => $this->getId()
		  ));
		if($relation){
		  return $relation->delete();
		}
		return false;
	}

}